Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e056535d-82d7-4316-8c10-214b094b0158" name="Changes" comment="" />
+    <list default="true" id="e056535d-82d7-4316-8c10-214b094b0158" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/codegym/arrayadvanced/ArrayAdvanced.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/codegym/arrayandmethod/ArrayAndMethod.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/codegym/arrayandmethod/ArrayAndMethod.class" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -44,7 +49,20 @@
       <recent name="D:\CODEGYM\CODEGYM\C0822G1\javacore\src\main\java\com\codegym\hellojava" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.ArrayAndMethod">
+  <component name="RunManager" selected="Application.ArrayAdvanced">
+    <configuration name="ArrayAdvanced" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.codegym.arrayadvanced.ArrayAdvanced" />
+      <module name="javacore" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.codegym.arrayadvanced.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="ArrayAndMethod" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.codegym.arrayandmethod.ArrayAndMethod" />
       <module name="javacore" />
@@ -86,6 +104,7 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.ArrayAdvanced" />
         <item itemvalue="Application.ArrayAndMethod" />
         <item itemvalue="Application.Main" />
         <item itemvalue="Application.IntroduceJava" />
@@ -102,7 +121,7 @@
       <updated>1665537195408</updated>
       <workItem from="1665537197524" duration="5822000" />
       <workItem from="1665623498731" duration="6359000" />
-      <workItem from="1665709485435" duration="340000" />
+      <workItem from="1665709485435" duration="6916000" />
     </task>
     <servers />
   </component>
Index: src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java b/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java
--- a/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java	
+++ b/src/main/java/com/codegym/arrayandmethod/ArrayAndMethod.java	
@@ -6,7 +6,126 @@
     public static Scanner scanner = new Scanner(System.in);
     public static void main(String[] args) {
 //        int [] a = new int[10];
+//        int [] a = {4,5,7,8};
+
+        boolean isRetry = true;
+        do{
+            System.out.println("BÀI TẬP MẢNG: ");
+            System.out.println("Nhập 1: Nhập phần tử cho mảng");
+            System.out.println("Nhập 2: Tìm giá trị lớn nhất");
+            System.out.println("Nhập 3: Thêm phần tử cho mảng");
+            System.out.println("Nhập 4: Đảo ngược mảng");
+            System.out.println("Nhập 5: Tìm giá trị trong mảng");
+
+            String action = scanner.nextLine();
+            switch (action){
+                case "1":
+                    inputArrayView();
+                    break;
+                case "2":
+                    findMaxView();
+                    break;
+                case "3":
+                    spliceView();
+                    break;
+                case "4":
+                    reverseArrayView();
+                    break;
+                case "5":
+                    findView();
+                    break;
+                default:
+                    isRetry = false;
+                    break;
+            }
+            isRetry= isReTryCountinue();
+
 
+        }while (isRetry);
+    }
+    public static boolean isReTryCountinue(){
+        boolean isRetryContinue = true;
+        do{
+            System.out.println("Bạn só muốn tiếp tục hay không. Nhập Y/N");
+            String actionCountinue = scanner.nextLine();
+            switch (actionCountinue){
+                case "Y":
+                    isRetryContinue = true;
+                    return true;
+                case "N":
+                    return false;
+                default:
+                    isRetryContinue = true;
+            }
+        }while (isRetryContinue);
+        return  isRetryContinue;
+    }
+
+    private static void spliceView() {
+        int [] a = inputArray();
+        System.out.println("Bạn có muốn thêm 1 phần tử vào mảng: ");
+        int value = scanner.nextInt();
+        int [] a1 = splice1(a, value);
+        System.out.println("Mảng mới: " + convertArrayToString(a1));
+    }
+
+    public static void splice(int arr[], int value){
+        int index = 2;
+        int [] aNew = new int[arr.length+1];
+        for(int i=0;i < index;i++){
+            aNew[i] = arr[i];
+        }
+        aNew[index] = value;
+        for(int i=index+1;i<aNew.length;i++){
+            aNew[i] = arr[i-1];
+        }
+        arr = aNew;
+    }
+    public static int[] splice1(int arr[], int value){
+        int index = 2;
+        int [] aNew = new int[arr.length+1];
+        for(int i=0;i < index;i++){
+            aNew[i] = arr[i];
+        }
+        aNew[index] = value;
+        for(int i=index+1;i<aNew.length;i++){
+            aNew[i] = arr[i-1];
+        }
+        return aNew;
+    }
+    public static void findView(){
+        int [] a = inputArray();
+        System.out.print("Nhập só bạn ần tìm: ");
+        int number = scanner.nextInt();
+
+        int index = find(a, number);
+        if(index!=-1){
+            System.out.printf("Đã tìm thấy %d ở vị trí thứ %d trong mảng", number, index);
+        }else {
+            System.out.printf("Không tìm thấy");
+        }
+    }
+    public static int find(int arr[], int value){
+        for(int i=0;i<arr.length;i++){
+            if(value==arr[i]){
+                return i;
+            }
+        }
+        return -1;
+    }
+
+    public static void findMaxView(){
+        int [] b = inputArray();
+        System.out.println("Giá trị lớn nhất của mảng là: " + findMax(b));
+    }
+    public static int findMax(int arr[]){
+        int max = arr[0];
+        for(int i=1;i < arr.length;i++){
+            if(arr[i]>max){
+                max = arr[i];
+            }
+        }
+        return max;
     }
     public static void reverseArrayView(){
         int [] arr = inputArray();
@@ -28,7 +147,7 @@
         int [] arr = new int[size];
         for(int i=0;i<arr.length;i++){
             System.out.print("Nhập phần tử thứ " + i + ": ");
-            int item = scanner.nextInt();
+            int item = Integer.parseInt(scanner.nextLine());
             arr[i] = item;
         }
 
Index: src/main/java/com/codegym/arrayadvanced/ArrayAdvanced.java
===================================================================
diff --git a/src/main/java/com/codegym/arrayadvanced/ArrayAdvanced.java b/src/main/java/com/codegym/arrayadvanced/ArrayAdvanced.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/codegym/arrayadvanced/ArrayAdvanced.java	
@@ -0,0 +1,37 @@
+package com.codegym.arrayadvanced;
+
+import java.util.Scanner;
+
+public class ArrayAdvanced {
+
+    public static Scanner scanner = new Scanner(System.in);
+    public static void main(String[] args) {
+
+//        int [][] arr = {{2,2,2}, {3,3,3}};
+        System.out.println("Nhập mảng 2 chiều");
+        System.out.print("Nhập số cột: ");
+        int col = Integer.parseInt(scanner.nextLine());
+        System.out.print("Nhập số dòng: ");
+        int row = Integer.parseInt(scanner.nextLine());
+
+        int [][]  arr = new int [row][col];
+        for(int i=0;i<arr.length;i++){
+            System.out.printf("Nhập cho dòng thứ %d \n", i);
+            for(int j=0;j<arr[i].length;j++){
+                System.out.printf("Nhập giá cho dòng %d cột %d [%d, %d]", i, j,i, j);
+                int value = Integer.parseInt(scanner.nextLine());
+                arr[i][j] = value;
+            }
+        }
+        printArrayAdvanced(arr);
+    }
+    public static void printArrayAdvanced(int arr[][]){
+        for(int i = 0;i<arr.length;i++){
+            for(int j=0;j<arr[i].length;j++){
+                System.out.print(arr[i][j] + " ");
+            }
+            System.out.println("");
+        }
+    }
+
+}
